AWSTemplateFormatVersion: 2010-09-09
Description: 'Provides networking configuration for a standard, public facing application, separates private-public subnets and enforces traffic with NACL rules (qs-1nb14cqcl)'
Metadata:
    AWS::CloudFormation::Interface:
        ParameterGroups:
          - Label:
                default: Region Config
            Parameters:
              - pRegionAZ1Name
              - pRegionAZ2Name
          - Label:
                default: IPv6 Application VPC Config
            Parameters:
              - pApplicationVPCName
              - pApplicationCIDR
              - pDMZSubnetACIDR
              - pDMZSubnetBCIDR
              - pAppPrivateSubnetACIDR
              - pAppPrivateSubnetBCIDR
              - pVPCTenancy
          - Label:
                default: AWS Quick Start Configuration
        ParameterLabels:
            pApplicationVPCName:
                default: Name of Application VPC
            pApplicationCIDR:
                default: Application VPC CIDR block
            pDMZSubnetACIDR:
                default: CIDR block of DMZ A subnet (internet facing)
            pDMZSubnetBCIDR:
                default: CIDR block of DMZ B subnet (internet facing)
            pAppPrivateSubnetACIDR:
                default: CIDR block of Application B subnet (private)
            pAppPrivateSubnetBCIDR:
                default: CIDR block of Application A subnet (private)
            pVPCTenancy:
                default: Instance tenancy
    Stack:
        Value: 2
    VersionDate:
        Value: 20160510
    Identifier:
        Value: template-vpc-v6application
    Input:
        Description: CIDR blocks, VPC names, KeyName, EC2 instance size
    Output:
        Description: Outputs ID of all deployed resources
Parameters:
    pRegionAZ1Name:
        Description: Availability Zone 1 Name in Region
        Type: AWS::EC2::AvailabilityZone::Name
        Default: "us-west-2a"
    pRegionAZ2Name:
        Description: Availability Zone 2 Name in Region
        Type: AWS::EC2::AvailabilityZone::Name
        Default: "us-west-2b"
    pApplicationVPCName:
        Description: IPv6 Application VPC Name
        Type: String
        Default: Dual-2 Application VPC
    pApplicationCIDR:
        Description: CIDR block for Dual Application VPC
        Type: String
        Default: 10.212.0.0/16
    pManagementCIDR:
        Description: CIDR of ACG Management VPC
        Type: String
        Default: 10.11.0.0/16
    pDMZSubnetACIDR:
        Description: CIDR block for Public subnet A
        Type: String
        Default: 10.212.10.0/24
    pDMZSubnetBCIDR:
        Description: CIDR block for Public subnet B
        Type: String
        Default: 10.212.20.0/24
    pAppPrivateSubnetACIDR:
        Description: CIDR block for Private subnet A
        Type: String
        Default: 10.212.30.0/24
    pAppPrivateSubnetBCIDR:
        Description: CIDR block for Private subnet B
        Type: String
        Default: 10.212.40.0/24
    pVPCTenancy:
        Description: Instance tenancy behavior for this VPC
        Type: String
        Default: default
        AllowedValues:
          - default
Resources:
    rVPCApplication:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref pApplicationCIDR
            EnableDnsSupport: true
            EnableDnsHostnames: true
            Tags:
              - Key: Name
                Value: !Ref pApplicationVPCName
    MyVPCv6: #Request an IPv6 block for the VPC
        Type: "AWS::EC2::VPCCidrBlock"
        Properties:
            AmazonProvidedIpv6CidrBlock: true
            VpcId: !Ref rVPCApplication
    rDMZSubnetA:
        Type: AWS::EC2::Subnet
        DependsOn: MyVPCv6
        Properties:
            CidrBlock: !Ref pDMZSubnetACIDR
            AvailabilityZone: !Ref pRegionAZ1Name
            VpcId: !Ref rVPCApplication
            Ipv6CidrBlock:
                Fn::Sub:
                    - "${VpcPart}${SubnetPart}"
                    - SubnetPart: 10::/64
                      VpcPart: !Select [0, !Split ['00::/56', !Select [0,!GetAtt rVPCApplication.Ipv6CidrBlocks]]]
            AssignIpv6AddressOnCreation: true
            Tags:
              - Key: Name
                Value: Dual-2 Application Public Subnet A
    rDMZSubnetB:
        Type: AWS::EC2::Subnet
        DependsOn: MyVPCv6
        Properties:
            CidrBlock: !Ref pDMZSubnetBCIDR
            AvailabilityZone: !Ref pRegionAZ2Name
            VpcId: !Ref rVPCApplication
            Ipv6CidrBlock:
                Fn::Sub:
                    - "${VpcPart}${SubnetPart}"
                    - SubnetPart: 20::/64
                      VpcPart: !Select [0, !Split ['00::/56', !Select [0,!GetAtt rVPCApplication.Ipv6CidrBlocks]]]
            AssignIpv6AddressOnCreation: true
            Tags:
              - Key: Name
                Value: Dual-2 Application Public Subnet B
    rAppPrivateSubnetA:
        Type: AWS::EC2::Subnet
        DependsOn: MyVPCv6
        Properties:
            CidrBlock: !Ref pAppPrivateSubnetACIDR
            AvailabilityZone: !Ref pRegionAZ1Name
            VpcId: !Ref rVPCApplication
            Ipv6CidrBlock:
                Fn::Sub:
                    - "${VpcPart}${SubnetPart}"
                    - SubnetPart: 30::/64
                      VpcPart: !Select [0, !Split ['00::/56', !Select [0,!GetAtt rVPCApplication.Ipv6CidrBlocks]]]
            AssignIpv6AddressOnCreation: true
            Tags:
              - Key: Name
                Value: Dual-2 Application Private Subnet A
    rAppPrivateSubnetB:
        Type: AWS::EC2::Subnet
        DependsOn: MyVPCv6
        Properties:
            CidrBlock: !Ref pAppPrivateSubnetBCIDR
            AvailabilityZone: !Ref pRegionAZ2Name
            VpcId: !Ref rVPCApplication
            Ipv6CidrBlock:
                Fn::Sub:
                    - "${VpcPart}${SubnetPart}"
                    - SubnetPart: 40::/64
                      VpcPart: !Select [0, !Split ['00::/56', !Select [0,!GetAtt rVPCApplication.Ipv6CidrBlocks]]]
            AssignIpv6AddressOnCreation: true
            Tags:
              - Key: Name
                Value: Dual-2 Application Private Subnet B
    rIGWApp:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
              - Key: Name
                Value: Dual-2 igw-application
    rRouteTableMain:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref rVPCApplication
            Tags:
              - Key: Name
                Value: Dual-2 Application Public Route
    rEIPAppNatA:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc
    rNATGatewaySubnetA:
        Type: AWS::EC2::NatGateway
        DependsOn: rIGWApp
        Properties:
            AllocationId: !GetAtt rEIPAppNatA.AllocationId
            SubnetId: !Ref rDMZSubnetA
    rEIPAppNatB:
        Type: AWS::EC2::EIP
        Properties:
            Domain: vpc
    rNATGatewaySubnetB:
        Type: AWS::EC2::NatGateway
        DependsOn: rIGWApp
        Properties:
            AllocationId: !GetAtt rEIPAppNatB.AllocationId
            SubnetId: !Ref rDMZSubnetB
    v6EOIGW:   # Creates EOIGW
        Type: "AWS::EC2::EgressOnlyInternetGateway"
        Properties: 
            VpcId: !Ref rVPCApplication
    rRouteAppIGW:
        Type: AWS::EC2::Route
        DependsOn: rGWAttachmentAppIGW
        Properties:
            RouteTableId: !Ref rRouteTableMain
            GatewayId: !Ref rIGWApp
            DestinationCidrBlock: 0.0.0.0/0
    rv6RouteAppIGW:   # Public Subnet Default route toward IGW (not EOIGW)
        Type: "AWS::EC2::Route"
        Properties:
            DestinationIpv6CidrBlock: "::/0"
            GatewayId: !Ref rIGWApp
            RouteTableId: !Ref rRouteTableMain
    rRouteAppPrivateNatGatewayA:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref rRouteTableAppPrivateA
            NatGatewayId: !Ref rNATGatewaySubnetA
    rRouteAppPrivateNatGatewayB:
        Type: AWS::EC2::Route
        Properties:
            DestinationCidrBlock: 0.0.0.0/0
            RouteTableId: !Ref rRouteTableAppPrivateB
            NatGatewayId: !Ref rNATGatewaySubnetB
    rRouteAssocAppDMZA:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableMain
            SubnetId: !Ref rDMZSubnetA
    rRouteAssocAppDMZB:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableMain
            SubnetId: !Ref rDMZSubnetB
    rAppPrivateSubnetAssociationA:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableAppPrivateA
            SubnetId: !Ref rAppPrivateSubnetA
    rAppPrivateSubnetAssociationB:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            RouteTableId: !Ref rRouteTableAppPrivateB
            SubnetId: !Ref rAppPrivateSubnetB
    rRouteTableAppPrivateA:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref rVPCApplication
            Tags:
              - Key: Name
                Value: Dual-2 Application Private Route A
    rv6RouteAppPrivateAEOIGW:   # Default route to EOIGW
        Type: "AWS::EC2::Route"
        Properties:
            DestinationIpv6CidrBlock: "::/0"
            EgressOnlyInternetGatewayId: !Ref v6EOIGW
            RouteTableId: !Ref rRouteTableAppPrivateA
    rRouteTableAppPrivateB:
        Type: AWS::EC2::RouteTable
        Properties:
            VpcId: !Ref rVPCApplication
            Tags:
              - Key: Name
                Value: Dual-2 Application Private Route B
    rv6RouteAppPrivateBEOIGW:   # Default route to EOIGW
        Type: "AWS::EC2::Route"
        Properties:
            DestinationIpv6CidrBlock: "::/0"
            EgressOnlyInternetGatewayId: !Ref v6EOIGW
            RouteTableId: !Ref rRouteTableAppPrivateB
    rGWAttachmentAppIGW:
        Type: AWS::EC2::VPCGatewayAttachment
        DependsOn: rIGWApp
        Properties:
            VpcId: !Ref rVPCApplication
            InternetGatewayId: !Ref rIGWApp
Outputs:
    rVPCApplication:
        Value: !Ref rVPCApplication
    rDMZSubnetA:
        Value: !Ref rDMZSubnetA
    rDMZSubnetB:
        Value: !Ref rDMZSubnetB
    rRouteTableAppPrivate:
        Value: !Ref rRouteTableAppPrivateA
    rRouteTableAppPrivateB:
        Value: !Ref rRouteTableAppPrivateB
    rRouteTableAppPublic:
        Value: !Ref rRouteTableMain
    rAppPrivateSubnetA:
        Value: !Ref rAppPrivateSubnetA
    rAppPrivateSubnetB:
        Value: !Ref rAppPrivateSubnetB
